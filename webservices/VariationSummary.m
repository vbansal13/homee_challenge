// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "VariationSummary.h"
#import "Price.h"

@implementation VariationSummary

@synthesize lowestPrice = _lowestPrice;
@synthesize highestPrice = _highestPrice;
@synthesize lowestSalePrice = _lowestSalePrice;
@synthesize highestSalePrice = _highestSalePrice;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    PicoClassSchema *cs = [[PicoClassSchema alloc] initWithXmlName:@"VariationSummary" nsUri:@"http://webservices.amazon.com/AWSECommerceService/2011-08-01"];
    [cs autorelease];
    return cs;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"LowestPrice" propertyName:@"lowestPrice" type:PICO_TYPE_OBJECT clazz:[Price class]];
    [map setObject:ps forKey:@"lowestPrice"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HighestPrice" propertyName:@"highestPrice" type:PICO_TYPE_OBJECT clazz:[Price class]];
    [map setObject:ps forKey:@"highestPrice"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"LowestSalePrice" propertyName:@"lowestSalePrice" type:PICO_TYPE_OBJECT clazz:[Price class]];
    [map setObject:ps forKey:@"lowestSalePrice"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HighestSalePrice" propertyName:@"highestSalePrice" type:PICO_TYPE_OBJECT clazz:[Price class]];
    [map setObject:ps forKey:@"highestSalePrice"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.lowestPrice = nil;
    self.highestPrice = nil;
    self.lowestSalePrice = nil;
    self.highestSalePrice = nil;
    [super dealloc];
}

@end
